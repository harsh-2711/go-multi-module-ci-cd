name: Auto Build

on:
  push:
    branches:
      - launchpad

jobs:
  setup-commit-hashes:
    if: github.event.sender.login != 'GitHub Action'
    runs-on: ubuntu-latest
    outputs:
      previous: ${{ steps.export.outputs.previous }}
      current: ${{ steps.export.outputs.current }}

    steps:
    - name: Export commit hashes
      id: export
      shell: bash
      run: |-
        PREVIOUS_COMMIT_HASH=${{ github.event.before }}
        CURRENT_COMMIT_HASH=${{ github.sha }}

        echo "Current commit: $CURRENT_COMMIT_HASH"
        echo "Commit to compare with: $PREVIOUS_COMMIT_HASH"

        echo "::set-output name=previous::$PREVIOUS_COMMIT_HASH"
        echo "::set-output name=current::$CURRENT_COMMIT_HASH"

  detect-package-changes:
    needs: setup-commit-hashes
    runs-on: ubuntu-latest
    outputs:
      changed-packages: ${{ steps.changes.outputs.changed-packages }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Detect changes
      id: changes
      shell: bash
      run: |-
        PREVIOUS_COMMIT_HASH=${{ needs.setup-commit-hashes.outputs.previous }}
        CURRENT_COMMIT_HASH=${{ needs.setup-commit-hashes.outputs.current }}

        echo "::group::Detecting changed packages"
        CHANGED_PACKAGES=$(git diff --name-only $PREVIOUS_COMMIT_HASH..$CURRENT_COMMIT_HASH | grep '^packages/' | cut -d/ -f2 | sort -u || echo -n '')
        echo "Changed packages: $CHANGED_PACKAGES"
        echo "::endgroup::"

        echo "::set-output name=changed-packages::$CHANGED_PACKAGES"

  build-packages:
    needs: detect-package-changes
    if: ${{ needs.detect-package-changes.outputs.changed-packages != '' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20.0'

    - name: Setup Workspace
      shell: bash
      run: |-
        echo "$(go version)"
        make setup-workspace

    - name: Check builds
      shell: bash
      run: |-
        make build-all-packages

  create-packages-matrix:
    needs: [build-packages, detect-package-changes]
    if: ${{ needs.detect-package-changes.outputs.changed-packages != '' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create matrix
      id: create_matrix
      shell: bash
      run: |-
        packages=$(find packages -name go.mod -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')
        echo "packages: $packages"
        echo "::set-output name=matrix::{\"package\": $packages}"

  tag-packages:
    needs: [create-packages-matrix, detect-package-changes]
    if: ${{ needs.detect-package-changes.outputs.changed-packages != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix: ${{ fromJson(needs.create-packages-matrix.outputs.matrix) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main,launchpad # Update this
        default_bump: patch
        tag_prefix: ${{ matrix.package }}/v

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

  sync-and-commit-packages:
    needs: [tag-packages, detect-package-changes]
    if: ${{ needs.detect-package-changes.outputs.changed-packages != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Update package dependencies
      id: update_package_dependencies
      shell: bash
      run: |-
        for folder in packages/*; do
          PACKAGE=${folder%/}
          LATEST_TAG=$(git describe --abbrev=0 --tags --match="$PACKAGE/*" 2>&1 | awk -F'/' '{print $NF}')
          make replace-deps module=$PACKAGE version=$LATEST_TAG
        done

    - name: Commit modified dependencies
      run: |-
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "chore: release new packages version" -a || exit 0

    - name: Push changes
      run: |-
        git push
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  detect-service-changes:
    needs: [sync-and-commit-packages, setup-commit-hashes]
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.changes.outputs.changed-services }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        shell: bash
        run: |-
          PREVIOUS_COMMIT_HASH=${{ needs.setup-commit-hashes.outputs.previous }}
          CURRENT_COMMIT_HASH=${{ needs.setup-commit-hashes.outputs.current }}

          echo "::group::Detecting changed services"
          CHANGED_SERVICES=$(git diff --name-only $PREVIOUS_COMMIT_HASH..$CURRENT_COMMIT_HASH | grep '^services/' | cut -d/ -f2 | sort -u || echo -n '')
          echo "Changed services: $CHANGED_SERVICES"
          echo "::endgroup::"

          echo "::set-output name=changed-services::$CHANGED_SERVICES"

  upgrade-and-build-services:
    needs: detect-service-changes
    if: ${{ needs.detect-service-changes.outputs.changed-services != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20.0'

    - name: Setup Workspace
      shell: bash
      run: |-
        echo "$(go version)"
        make setup-workspace

    - name: Check builds
      shell: bash
      run: |-
        CHANGED_SERVICES=${{ needs.detect-service-changes.outputs.changed-services }}
        for service in $CHANGED_SERVICES; do
          cd services/$service
          go build -v -o /dev/null || exit 1
          cd - > /dev/null
        done

    - name: Update package dependencies
      shell: bash
      run: |-
        CHANGED_SERVICES=${{ needs.detect-service-changes.outputs.changed-services }}
        for service in $CHANGED_SERVICES; do
          cd services/$service
          go get -u && go get -u all && go mod tidy
          cd - > /dev/null; \
        done

    - name: Commit modified dependencies
      run: |-
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git pull
        git add -A
        git commit -m "chore: upgrade packages" -a || exit 0

    - name: Push changes
      run: |-
        git push
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
