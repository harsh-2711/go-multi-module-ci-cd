name: Auto Build Packages

on:
  push:
    branches:
      - launchpad

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.sender.login != 'GitHub Action'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Detect changes
      id: changes
      shell: bash
      run: |
        echo "START"
        git diff --name-only ${{ github.event.before }}..${{ github.sha }} | grep '^packages/' | cut -d/ -f2 | sort -u
        echo "END"
        echo "::group::Detecting changed packages"
        CHANGED_PACKAGES=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} | grep '^packages/' | cut -d/ -f2 | sort -u)
        echo "Changed packages: $CHANGED_PACKAGES"
        echo "::endgroup::"

    - name: Exit if no changes
      shell: bash
      run: |
        if [[ -z "$CHANGED_PACKAGES" ]]; then
          echo "No changes detected in packages, exiting"
          exit 0
        fi

    - uses: actions/setup-go@v4
      with:
        go-version: '^1.20.0'

    - name: Setup Workspace
      shell: bash
      run: |
        echo "$(go version)"
        make setup-workspace

    - name: Check builds
      shell: bash
      run: |
        make build-all-packages

  tag:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        package: [even, odd]
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}

    steps:
    - uses: actions/checkout@v3

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main,launchpad # Update this
        default_bump: patch
        tag_prefix: packages/${{ matrix.package }}/v

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

  sync-and-commit:
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Update package dependencies
      id: update_package_dependencies
      shell: bash
      run: |
        for folder in packages/*; do
          PACKAGE=${folder%/}
          LATEST_TAG=$(git describe --abbrev=0 --tags --match="$PACKAGE/*" 2>&1 | awk -F'/' '{print $NF}')
          make replace-deps module=$PACKAGE version=$LATEST_TAG
        done

    - name: Commit modified dependencies
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "chore: release new packages version" -a || exit 0

    - name: Push changes
      run: |
        git push
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
